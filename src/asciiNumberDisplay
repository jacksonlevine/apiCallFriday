export class asciiNumberDisplay {
  displayWidth = 5;
  static numbWidth = 5;
  static numbHeight = 5;
  static numbs = new Map([
    [0, 
      "@@@@@"+
      "@...@"+
      "@...@"+
      "@...@"+
      "@@@@@"],
      [1, 
        "..@.."+
        "@@@.."+
        "..@.."+
        "..@.."+
        "@@@@@"],
        [2, 
          ".@@@."+
          "@...@"+
          "..@@."+
          ".@..."+
          "@@@@@"],
          [3, 
            ".@@@."+
            "....@"+
            "..@@@"+
            "....@"+
            ".@@@."],
            [4, 
              "....@"+
              ".@..@"+
              "@@@@@"+
              "...@."+
              "...@."],
              [5, 
                "@@@@@"+
                "@...."+
                "@@@@."+
                "....@"+
                "@@@@@"],
                [6, 
                  "@@@@@"+
                  "@...."+
                  "@@@@@"+
                  "@...@"+
                  "@@@@@"],
                  [7, 
                    "@@@@@"+
                    "....@"+
                    "....@"+
                    "....@"+
                    "....@"],
                    [8, 
                      "@@@@@"+
                      "@...@"+
                      ".@@@."+
                      "@...@"+
                      "@@@@@"],
                      [9, 
                        "@@@@@"+
                        "@...@"+
                        "@@@@@"+
                        "....@"+
                        "@@@@@"],
  ]);
  constructor(width) {
    this.displayWidth = width;
  }
  static getSingleNumber(number) {
    if(this.numbs.has(number)) {
      return this.numbs.get(number);
    }
    return false;
  }
}